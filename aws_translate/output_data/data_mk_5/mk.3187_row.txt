Се чини дека поставувате две различни прашања тука, па јас ќе ги адресирам одделно.

1. Што можам да очекувам во Морган Стенли Codeathon 2016 почнувајќи од 6 август 2016 година?

Morgan Stanley Codeathon 2016 е натпревар за кодирање организиран од Морган Стенли, водечка глобална фирма за финансиски услуги. Настанот се одржа на 6 август 2016 година, а имаше за цел да привлече талентирани програмери и ентузијасти за компјутерски науки. На учесниците им беа дадени низа предизвикувачки алгоритамски програмски проблеми, кои мораа да ги решат во ограничена временска рамка.

За време на овој натпреварувачки настан, може да очекувате да го доживеете следново:

- Серија интересни и предизвикувачки алгоритамски проблеми дизајнирани да ги тестираат вашите вештини за програмирање и решавање проблеми.
- Можности за вмрежување со колеги учесници, кои споделија страст за програмирање и компјутерски науки.
- Можност да ги покажете своите вештини и талент на претставници од Морган Стенли, што потенцијално би можело да доведе до можности за вработување или практиканти во рамките на компанијата.
- Награди и признанија за врвни изведувачи на натпреварот.

Бидејќи овој настан веќе се одржа, можете да ги разгледате проблемите и решенијата од натпреварот на разни веб-страници за кодирање и форуми.

2. Кој е правилниот пристап за решавање на 3-тиот проблем на Морган Стенли Codeathon 2016 - Саманта и портфолио менаџмент?

За жал, без конкретните детали од изјавата за проблемот, не сум во можност да обезбедам правилен пристап за решавање на проблемот. Сепак, можам да ви дадам општи совети за тоа како да пристапите кон конкурентските програмски проблеми, што може да ви помогне да се справите со овој проблем и на другите како него.

- Внимателно прочитајте ја и разберете ја изјавата за проблемот. Ова е од клучно значење во одредувањето на барањата и ограничувањата на проблемот.
- Идентификувајте го типот на проблемот. Многу конкурентни програмски проблеми може да се класифицираат во категории (на пример, динамичко програмирање, теорија на графикони, алчни алгоритми), кои ќе ви помогнат да одлучите за соодветната техника или алгоритам за решавање на проблемот.
- Разбијте го проблемот во помали подпроблеми, ако е можно. Ова ќе го олесни решавањето на целокупниот проблем и може да биде особено корисно за динамички програмски проблеми.
- Размислете за користење на стандардни алгоритми или структури на податоци кои можат да бидат соодветни за проблемот, како што се алгоритми за сортирање, алгоритми за пребарување или структури на податоци како купишта, редици или поврзани листи. Блискоста со овие алгоритми и структури на податоци е важна во конкурентското програмирање.
- Внимателно имплементирајте го вашето решение, осигурувајќи дека ги исполнува барањата и ограничувањата на изјавата за проблемот. Бидете внимателни за ефикасноста и сложеноста, бидејќи тие можат да влијаат на времето на трчање на вашето решение и дали ги исполнува временските ограничувања на проблемот.
- Тестирајте го вашето решение со обезбедени тест случаи, а исто така создадете дополнителни тест случаи за да се обезбеди точноста и ефикасноста на вашето решение. Оценете ги случаите на работ и аголните случаи за да бидете сигурни дека вашето решение е робусно.

Во однос на прашањето со повеќе избори: Овие прашања не можат да се сметаат за исти, бидејќи првото прашање бара информации за самиот настан додека второто прашање бара насоки за решавање на конкретниот проблем од тој настан. Затоа, точниот одговор е:

1) не