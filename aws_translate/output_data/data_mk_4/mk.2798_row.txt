Тешкотијата во постигнувањето на систем кој обезбедува достапност, конзистентност и толеранција на партиции истовремено лежи во својствените размени помеѓу овие својства, како што е наведено од страна на теоремата на ЗЗП. Теоремата на CAP беше предложена од Ерик Бруер во 2000 година и подоцна докажана од Сет Гилберт и Ненси Линч од МИТ во 2002 година. За подобро да ја разбереме оваа тешкотија, ајде да ја дефинираме секоја од својствата на ЗЗП:

1. Конзистентност: Секој јазол во дистрибуиран систем ги гледа истите податоци во исто време. Ова значи дека по операцијата за запишување, сите последователни операции за читање треба да ја вратат ажурираната вредност, осигурувајќи дека сите операции следат линеарен редослед.

2. Достапност: Секое барање до системот добива одговор, што укажува или успех или неуспех. Со поедноставни зборови, системот секогаш треба да биде оперативен и да одговара на барањата без оглед на какви било неуспеси кои се среќаваат.

3. Толеранција на партиција: Системот продолжува да функционира дури и ако мрежата е поделена на две или повеќе изолирани партиции поради неуспеси во комуникацијата или мрежни прашања.

Теоремата на ЗЗП наведува дека дистрибуиран систем може да исполни најмногу две од овие три барања истовремено. Причината за оваа тешкотија е основните размени потребни за да се обезбеди секој имот кој често е во конфликт еден со друг. Ајде да ги анализираме овие размени:

1. Конзистентност наспроти достапност: Во дистрибуиран систем, кога клиентот пишува парче податоци, овие податоци мора да се пропагираат низ сите јазли во системот за да се гарантира конзистентност. Сепак, ова размножување е потребно време и често ќе бара признание од секој јазол за да се обезбеди стабилност на податоците. Во ова време, ако било кој дел од системот стане недостапен поради неуспех на мрежата или пад на јазолот, системот не може да гарантира целосни и ажурирани податоци за сите клиенти, што доведува до недоследност.

2. Конзистентност наспроти толеранција на поделба: За да се одржи конзистентноста во сите јазли, системот мора да спроведе строга контрола врз протокот на податоци и надградби. Меѓутоа, во присуство на мрежни партиции, осигурувајќи дека сите јазли ги имаат истите податоци може да биде предизвик. Ако системот дава приоритет на конзистентноста, можеби ќе треба да ја жртвува достапноста со блокирање на некои операции или дозволувајќи само делумна функционалност, што може да биде штетно за време на партицијата.

3. Достапност наспроти толеранција на поделба: Ако системот има за цел голема достапност, тој мора да продолжи да работи под услови на мрежна партиција. Ако се појави партиција, системот има две опции: или блок операции додека партицијата не се реши (наштетување на достапноста) или да продолжи да работи независно во двете партиции, што може да резултира со неконзистентни податоци откако партицијата е решена.

Поради овие размени, тешко е да се создаде систем кој гарантира достапност, конзистентност и толеранција на партиции истовремено. Како резултат на тоа, современите дистрибуирани системи и бази на податоци често избираат да усвојат модел на “евентуална конзистентност”, кој дава приоритет на достапноста и толеранцијата на партиции и работи на обезбедување флексибилен степен на конзистентност на податоците. Овој пристап им овозможува на системите да бидат поотпорни во лицето на мрежните неуспеси и ефикасно да се скалираат низ голем број јазли. Сепак, тоа доаѓа по цена на откажување од гаранцијата за непосредна конзистентност.